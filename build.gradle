plugins {
    id 'groovy'
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

group 'com.kazurayam'
version '0.1.0'

ext.isReleaseVersion = ! version.endsWith("SNAPSHOT")

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each {
    it.options.encoding = defaultEncoding
}

ext {
    groovyVersion = '2.4.21'
    slf4jVersion = '1.7.25'
    selenium3Version = '3.141.59'
    webdrivermanagerVersion = '5.6.2'
    junitVersion = '4.12'
}

configurations {
    generateDocs
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "org.codehaus.groovy:groovy-all:${groovyVersion}"
    generateDocs "org.codehaus.groovy:groovy-all:${groovyVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: "${slf4jVersion}"
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "${selenium3Version}"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "${selenium3Version}"
    testImplementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: "${webdrivermanagerVersion}"
    testImplementation group: 'junit', name: 'junit', version: "${junitVersion}"

}

test {
    finalizedBy jacocoTestReport
}

task groovydoc(type:Groovydoc, overwrite:true) {
    group = 'com.kazurayam'
    source = sourceSets.main.groovy
    classpath = configurations.generateDocs
    groovyClasspath = project.configurations.generateDocs
    include 'com/kazurayam/webdriverfactory/**'
    exclude '**/*Test.groovy'
}

task publishGroovydoc(type: Copy) {
    from 'build/docs/groovydoc'
    into 'docs/api'
}
groovydoc.finalizedBy publishGroovydoc

task groovydocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        webdriverfactory(MavenPublication) {
            artifact sourcesJar
            artifact groovydocJar
            pom {
                groupId = project.group
                name = project.rootProject.name
                description = 'A Java/Groovy library that layout multiple browser windows in Tile or Stack fashion'
                url = 'https://kazurayam.github.io/browserwindowlayout/'
                from components.java
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org.licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kazurayam'
                        name = 'URAYAMA,kazuaki'
                        email = 'kazuaki.urayama@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/kazurayam/${project.rootProject.name}.git"
                    developerConnection = "scm:git:git@github.com:kazurayam/${project.rootProject.name}.git"
                    url = "https://github.com/kazurayam/${project.rootProject.name}"
                }
            }
        }
    }
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo: snapshotRepo
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
            }
        }
    }
}

signing {
    sign publishing.publications.webdriverfactory
}
// I do not want to sign the SNAPSHOT

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
